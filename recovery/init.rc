on early-init
    start ueventd

on init
    export PATH /sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    symlink /system/etc /etc

    mkdir /boot
    mkdir /sdcard
    mkdir /sd-ext
    mkdir /datadata
    mkdir /emmc
    mkdir /system
    mkdir /data
    mkdir /cache
    mount /tmp /tmp tmpfs

    # Enable LVM

    mkdir /mnt

    # We need to set LVM_SYSTEM_DIR for lvm to work and it does not work
    # with embedded export command until too late, so we exploit
    # the fact that there is /bin/sh on the 13th partition that we can use.
    mount ext3 /dev/block/mmcblk0p13 /mnt wait noatime barrier=1
    # Unfortunately it's dynamically linked so we need to create this
    # /lib symlink first and kill it later when no longer needed.
    symlink /mnt/lib /lib
    # Also stupid lvm binary expects block devices to live in /dev,
    # not /dev/block
    symlink /dev/block/mmcblk0p14 /dev/mmcblk0p14
    exec /mnt/bin/sh -c "LVM_SYSTEM_DIR=/mnt/etc/lvm /mnt/usr/sbin/lvm.static vgchange -ay"

    # remove all the lvm stuff as well as the moboot nextboot instruction
    exec /sbin/rm -rf /dev/mmcblk0p14 /lib /var /mnt/moboot.next
    exec /sbin/umount /mnt

    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18D1
    write /sys/class/android_usb/android0/idProduct D001
    write /sys/class/android_usb/android0/functions adb
    write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    write /sys/class/android_usb/android0/iProduct ${ro.product.model}
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}

on boot

    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

service ueventd /sbin/ueventd
    critical

service recovery /sbin/recovery

service adbd /sbin/adbd recovery
    disabled

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 1
    start adbd

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

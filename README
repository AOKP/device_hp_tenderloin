CM7 TENDERLOIN BUILD INSTRUCTIONS
8/31/11


INSTRUCTIONS:

1.  Apply the following repo to .repo/local_manifest.xml

----cut----

<?xml version="1.0" encoding="UTF-8"?>
  <manifest>

  <remote  name="codeaurora"
           fetch="git://codeaurora.org"/>

  <remote  name = "privategh"
           fetch="git@github.com:" />

    <project path="device/hp/tenderloin"
      name="CyanogenMod/android_device_hp_tenderloin"
      remote="privategh"
      revision="gingerbread"/>

    <project path="device/htc/pyramid"
      name="CyanogenMod/android_device_htc_pyramid"
      remote="privategh"
      revision="gingerbread"/>

    <remove-project path="hardware/msm7k"
      name="CyanogenMod/android_hardware_msm7k"/>

    <project path="hardware/msm7k"
      name = "CyanogenMod/android_hardware_qsd8x60"
      remote="privategh"
      revision="gingerbread"/>

    <remove-project path="hardware/qcom/media"
      name="CyanogenMod/android_hardware_qcom_media"/>

    <project path="hardware/qcom/media/"
      name = "CyanogenMod/ninjas_hardware_qcom_media"
      remote="privategh"
      revision="gingerbread" />

    <remove-project path="frameworks/base"
      name="CyanogenMod/android_frameworks_base"/>

    <project path="frameworks/base"
      name = "CyanogenMod/ninjas_frameworks_base"
      remote="privategh"
      revision="gingerbread" />

    <!-- project path="hardware/qcom/media/mm-core"
     name = "platform/vendor/qcom-opensource/omx/mm-core"
     remote="codeaurora"
     revision="gingerbread_house"/ -->

  </manifest>


----cut----


2.  Add tenderloin to cyanogenmod's vendor tree

    croot
    cd vendor/cyanogenmod
    git apply (or add manually):

diff --git a/products/AndroidProducts.mk b/products/AndroidProducts.mk
index 3a927db..08015af 100644
--- a/products/AndroidProducts.mk
+++ b/products/AndroidProducts.mk
@@ -44,6 +44,7 @@ PRODUCT_MAKEFILES := \
     $(LOCAL_DIR)/cyanogen_smb_b9701.mk \
     $(LOCAL_DIR)/cyanogen_speedy.mk \
     $(LOCAL_DIR)/cyanogen_supersonic.mk \
+    $(LOCAL_DIR)/cyanogen_tenderloin.mk \
     $(LOCAL_DIR)/cyanogen_u8220.mk \
     $(LOCAL_DIR)/cyanogen_vega.mk \
     $(LOCAL_DIR)/cyanogen_vibrantmtd.mk \
diff --git a/vendorsetup.sh b/vendorsetup.sh
index cc7ea64..18f5810 100644
--- a/vendorsetup.sh
+++ b/vendorsetup.sh
@@ -43,6 +43,7 @@ add_lunch_combo cyanogen_smb_a1011-eng
 add_lunch_combo cyanogen_smb_b9701-eng
 add_lunch_combo cyanogen_speedy-eng
 add_lunch_combo cyanogen_supersonic-eng
+add_lunch_combo cyanogen_tenderloin-eng
 add_lunch_combo cyanogen_u8220-eng
 add_lunch_combo cyanogen_vega-eng
 add_lunch_combo cyanogen_vibrantmtd-eng

2b.  Create a new file at vendor/cyanogen/products/cyanogen_tenderloin.mk as follows:

------cut------

# Inherit AOSP device configuration for tenderloin.
$(call inherit-product, device/hp/tenderloin/device_tenderloin.mk)

# Inherit some common cyanogenmod stuff.
$(call inherit-product, vendor/cyanogen/products/common_full.mk)

#
# Setup device specific product configuration.
#
PRODUCT_NAME := cyanogen_tenderloin
PRODUCT_BRAND := hp
PRODUCT_DEVICE := tenderloin
PRODUCT_MODEL := HP Touchpad
PRODUCT_MANUFACTURER := hp
PRODUCT_BUILD_PROP_OVERRIDES += PRODUCT_NAME=tenderloin BUILD_ID=GRJ22 BUILD_DISPLAY_ID=GRJ90 BUILD_FINGERPRINT=google/passion/passion:2.3.4/GRJ22/121341:user/release-keys PRIVATE_BUILD_DESC="passion-user 2.3.4 GRJ22 121341 release-keys"

PRODUCT_PACKAGE_OVERLAYS += \
    vendor/cyanogen/overlay/tablet \
    vendor/cyanogen/overlay/tenderloin

#
# Set ro.modversion
#
ifdef CYANOGEN_NIGHTLY
    PRODUCT_PROPERTY_OVERRIDES += \
        ro.modversion=CyanogenMod-7-$(shell date +%m%d%Y)-NIGHTLY-tenderloin
else
    ifdef CYANOGEN_RELEASE
        PRODUCT_PROPERTY_OVERRIDES += \
            ro.modversion=CyanogenMod-7.1.0-RC1-tenderloin
    else
        PRODUCT_PROPERTY_OVERRIDES += \
            ro.modversion=CyanogenMod-7.1.0-RC1-tenderloin-KANG
    endif
endif


PRODUCT_COPY_FILES +=  \
    vendor/cyanogen/prebuilt/hdpi/media/bootanimation.zip:system/media/bootanimation.zip
------cut------


3.  Set up vendor tree.  Either:

    3a.  Run extract-files in device/hp/tenderloin to set up the vendor/hp/tenderloin directory

    Then, two files needed to be added (such as from the android dump):

    Into vendor/hp/tenderloin/proprietary:
         libaudioalsa.so
         libcamera.so

    3b.  Use the vendor repo.


4.  reposync, build and cross your fingers.

    croot
    repo sync -j16
    make clobber
    brunch tenderloin

    ...and see what happens.

Hopefully there will be something valuable in $OUT to play with.  Obviously the update.zip is not very useable yet.
But the sweet, sweet files should be inside.




WHAT TO DO IF THE BUILD BREAKS

Fix it.



QUICK MANUAL REPARTITION FOR CM7

[semi-untested.  Please enhance this section then remove this notice.]

** WARNING!  DO NOT ATTEMPT THESE INSTRUCTIONS UNLESS YOU KNOW WHAT YOU ARE DOING.  THE POTENTIAL FOR HARM
TO YOUR DEVICE IS HIGH WHEN YOU ATTEMPT TO REPARTITION ANYTHING.  ANY ATTEMPT TO DO SO IS ENTIRELY AT YOUR
OWN RISK.  YOU MAY BRICK!  THESE INSTRUCTIONS ARE UNTESTED, UNVERIFIED, AND PURE EVIL ***

Still here?  Okay...  So boot webos, and in novaterm, first shrink /dev/store/media to make room for the
new partitions.

(replace [NEWSIZE] with a number, such as 15.1).  the sizes can end in M or G.  For example, I took 2GB off
for use with CM7.

# pkill -SIGUSR1 cryptofs
# umount /media/internal
# fsck.vfat /dev/mapper/store-media
# resize fat -p /dev/mapper/store-media [NEWSIZE]G
# lvreduce -L [NEWSIZE]G /dev/mapper/store-media

Check to make sure the vfat file system is still okay:

# fsck.vfat /dev/mapper/store-media

Now create the three new logical volumes:

# lvcreate -L 1.5G --name cm-data store
# lvcreate -L 300M --name cm-system store
# lvcreate -L 200M --name cm-cache store

(may also want to create /cm-boot and cm-recovery, but for now don't worry about it)

And create the file systems

# mkfs.ext3 /dev/store/cm-system
# mkfs.ext4 /dev/store/cm-cache
# mkfs.ext4 /dev/store/cm-data

The reason cm-system is ext3 is that you can't mount it as ext4 from the current webos kernel, which is needed
to put android on there initially (but not after that, as you will have adb)

You can now remount and restart cryptofs and stuff:

# mount -t vfat /dev/mapper/store-media /media/internal
# pkill -SIGUSR2 crpytofs



COPYING FILES INTO CM-SYSTEM (FIRST TIME ONLY)

/media/ram is a nice place on your tp that you can use as a scratch.  To copy files there,

$ cat myfile|novacom put file:///media/ram/myfile

You can then:

$ mkdir media/ram/system
$ mount /dev/store/cm-system /media/ram/system

copy your files to /media/ram/system and *verify exec permissions in bin and xbin*



COPYING FILES INTO CM (SUBSEQUENT BUILDS)

Once you have CM7 booting, there's no need for copying files manually.

After completing a build on your linux box, simply type:

$ adb sync system

And everything will be synced properly from $OUT/system -> your tp.

(ProTip:  you may want to add an "$ adb shell sync" when you're done)

You can also change your ext3 cm-system partition to ext4 if you like.


HOW TO BOOT

You will need the "uMulti" kernel+ramdisk.

So reboot the tp with the usb plugged in while holding volume up.

At the white USB logo...

$ novacom boot mem:// < uMulti

And away you go!



SPECIAL COMMANDS

Once in the shell, you can simulate keypresses using the following chart:

http://groups.google.com/group/android-developers/browse_thread/thread/a4705c3f62414f90

Example:

# input keyevent 82

will turn off the lockscreen



WANT SCREENSHOTS?

Use the android debugger -> ddms.

